{"ast":null,"code":"var _jsxFileName = \"/Users/jtsang01/Desktop/GainsSuggestor/gainsuggestor/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Form, Button, ButtonGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// ... (previous imports)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [age, setAge] = useState('');\n  const [bodyFat, setBodyFat] = useState('');\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [gender, setGender] = useState('male');\n  const [goal, setGoal] = useState('maintenance');\n  const [activityLevel, setActivityLevel] = useState('sedentary');\n  const [leanBodyMass, setLeanBodyMass] = useState('');\n  const [dailyCalories, setDailyCalories] = useState('');\n  const [proteinRatio, setProteinRatio] = useState(30);\n  const [carbRatio, setCarbRatio] = useState(50);\n  const [fatRatio, setFatRatio] = useState(20);\n  const [proteinAmount, setProteinAmount] = useState('');\n  const [carbAmount, setCarbAmount] = useState('');\n  const [fatAmount, setFatAmount] = useState('');\n  const [unitSystem, setUnitSystem] = useState('metric'); // 'metric' or 'imperial'\n\n  const calculateLeanBodyMass = () => {\n    if (weight) {\n      const fatMass = bodyFat / 100 * weight;\n      const leanMass = weight - fatMass;\n      setLeanBodyMass(leanMass.toFixed(2));\n    }\n  };\n  const calculateTDEE = () => {\n    if (age && height && weight && gender && goal && activityLevel) {\n      let bmr;\n\n      // Convert height and weight to metric units if imperial is selected\n      const heightInCm = unitSystem === 'metric' ? height : height * 2.54;\n      const weightInKg = unitSystem === 'metric' ? weight : weight * 0.453592;\n\n      // Calculate BMR based on Mifflin-St Jeor Equation\n      if (gender === 'male') {\n        bmr = 10 * weightInKg + 6.25 * heightInCm - 5 * age + 5;\n      } else {\n        bmr = 10 * weightInKg + 6.25 * heightInCm - 5 * age - 161;\n      }\n\n      // Apply activity level multiplier to get TDEE\n      let tdee;\n      switch (activityLevel) {\n        case 'sedentary':\n          tdee = bmr * 1.2;\n          break;\n        case 'lightlyActive':\n          tdee = bmr * 1.375;\n          break;\n        case 'moderatelyActive':\n          tdee = bmr * 1.55;\n          break;\n        case 'veryActive':\n          tdee = bmr * 1.725;\n          break;\n        case 'extraActive':\n          tdee = bmr * 1.9;\n          break;\n        default:\n          tdee = bmr;\n      }\n      setDailyCalories(tdee.toFixed(2));\n    }\n  };\n  const calculateMacronutrients = () => {\n    if (leanBodyMass && dailyCalories) {\n      const protein = proteinRatio / 100 * leanBodyMass;\n      const carbs = carbRatio / 100 * leanBodyMass;\n      const fat = fatRatio / 100 * leanBodyMass;\n      setProteinAmount((protein * 4).toFixed(2)); // Assuming 1g of protein = 4 calories\n      setCarbAmount((carbs * 4).toFixed(2)); // Assuming 1g of carbs = 4 calories\n      setFatAmount((fat * 9).toFixed(2)); // Assuming 1g of fat = 9 calories\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Macro Nutrition Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: unitSystem === 'metric' ? 'primary' : 'secondary',\n        onClick: () => setUnitSystem('metric'),\n        children: \"Metric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: unitSystem === 'imperial' ? 'primary' : 'secondary',\n        onClick: () => setUnitSystem('imperial'),\n        children: \"Imperial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: calculateTDEE,\n        children: \"Calculate TDEE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), dailyCalories && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: calculateMacronutrients,\n          children: \"Calculate Macronutrients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), dailyCalories && proteinAmount && carbAmount && fatAmount && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Macronutrient Breakdown:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Protein: \", proteinAmount, \" calories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Carbohydrates: \", carbAmount, \" calories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fat: \", fatAmount, \" calories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kLLI92C1+8FOfU+PbbOCZG2kdD8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Form","Button","ButtonGroup","jsxDEV","_jsxDEV","App","_s","age","setAge","bodyFat","setBodyFat","height","setHeight","weight","setWeight","gender","setGender","goal","setGoal","activityLevel","setActivityLevel","leanBodyMass","setLeanBodyMass","dailyCalories","setDailyCalories","proteinRatio","setProteinRatio","carbRatio","setCarbRatio","fatRatio","setFatRatio","proteinAmount","setProteinAmount","carbAmount","setCarbAmount","fatAmount","setFatAmount","unitSystem","setUnitSystem","calculateLeanBodyMass","fatMass","leanMass","toFixed","calculateTDEE","bmr","heightInCm","weightInKg","tdee","calculateMacronutrients","protein","carbs","fat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/jtsang01/Desktop/GainsSuggestor/gainsuggestor/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Form, Button, ButtonGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// ... (previous imports)\n\nfunction App() {\n  const [age, setAge] = useState('');\n  const [bodyFat, setBodyFat] = useState('');\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [gender, setGender] = useState('male');\n  const [goal, setGoal] = useState('maintenance');\n  const [activityLevel, setActivityLevel] = useState('sedentary');\n  const [leanBodyMass, setLeanBodyMass] = useState('');\n  const [dailyCalories, setDailyCalories] = useState('');\n  const [proteinRatio, setProteinRatio] = useState(30);\n  const [carbRatio, setCarbRatio] = useState(50);\n  const [fatRatio, setFatRatio] = useState(20);\n  const [proteinAmount, setProteinAmount] = useState('');\n  const [carbAmount, setCarbAmount] = useState('');\n  const [fatAmount, setFatAmount] = useState('');\n  const [unitSystem, setUnitSystem] = useState('metric'); // 'metric' or 'imperial'\n\n  const calculateLeanBodyMass = () => {\n    if (weight) {\n      const fatMass = (bodyFat / 100) * weight;\n      const leanMass = weight - fatMass;\n      setLeanBodyMass(leanMass.toFixed(2));\n    }\n  };\n\n  const calculateTDEE = () => {\n    if (age && height && weight && gender && goal && activityLevel) {\n      let bmr;\n\n      // Convert height and weight to metric units if imperial is selected\n      const heightInCm = unitSystem === 'metric' ? height : height * 2.54;\n      const weightInKg = unitSystem === 'metric' ? weight : weight * 0.453592;\n\n      // Calculate BMR based on Mifflin-St Jeor Equation\n      if (gender === 'male') {\n        bmr = 10 * weightInKg + 6.25 * heightInCm - 5 * age + 5;\n      } else {\n        bmr = 10 * weightInKg + 6.25 * heightInCm - 5 * age - 161;\n      }\n\n      // Apply activity level multiplier to get TDEE\n      let tdee;\n      switch (activityLevel) {\n        case 'sedentary':\n          tdee = bmr * 1.2;\n          break;\n        case 'lightlyActive':\n          tdee = bmr * 1.375;\n          break;\n        case 'moderatelyActive':\n          tdee = bmr * 1.55;\n          break;\n        case 'veryActive':\n          tdee = bmr * 1.725;\n          break;\n        case 'extraActive':\n          tdee = bmr * 1.9;\n          break;\n        default:\n          tdee = bmr;\n      }\n\n      setDailyCalories(tdee.toFixed(2));\n    }\n  };\n\n  const calculateMacronutrients = () => {\n    if (leanBodyMass && dailyCalories) {\n      const protein = (proteinRatio / 100) * leanBodyMass;\n      const carbs = (carbRatio / 100) * leanBodyMass;\n      const fat = (fatRatio / 100) * leanBodyMass;\n\n      setProteinAmount((protein * 4).toFixed(2)); // Assuming 1g of protein = 4 calories\n      setCarbAmount((carbs * 4).toFixed(2)); // Assuming 1g of carbs = 4 calories\n      setFatAmount((fat * 9).toFixed(2)); // Assuming 1g of fat = 9 calories\n    }\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <h1 className=\"mb-4\">Macro Nutrition Calculator</h1>\n      <ButtonGroup className=\"mb-3\">\n        <Button\n          variant={unitSystem === 'metric' ? 'primary' : 'secondary'}\n          onClick={() => setUnitSystem('metric')}\n        >\n          Metric\n        </Button>\n        <Button\n          variant={unitSystem === 'imperial' ? 'primary' : 'secondary'}\n          onClick={() => setUnitSystem('imperial')}\n        >\n          Imperial\n        </Button>\n      </ButtonGroup>\n      <Form>\n        {/* ... (previous form fields) */}\n        <Button variant=\"primary\" onClick={calculateTDEE}>\n          Calculate TDEE\n        </Button>\n        {dailyCalories && (\n          <div className=\"mt-4\">\n            <Button variant=\"success\" onClick={calculateMacronutrients}>\n              Calculate Macronutrients\n            </Button>\n          </div>\n        )}\n      </Form>\n      {dailyCalories && proteinAmount && carbAmount && fatAmount && (\n        <div className=\"mt-4\">\n          <h3>Macronutrient Breakdown:</h3>\n          <p>Protein: {proteinAmount} calories</p>\n          <p>Carbohydrates: {carbAmount} calories</p>\n          <p>Fat: {fatAmount} calories</p>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}