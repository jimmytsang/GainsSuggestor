{"ast":null,"code":"var _jsxFileName = \"/Users/jtsang01/Desktop/GainsSuggestor/gainsuggestor/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ... (previous imports)\n\nfunction App() {\n  _s();\n  const [weight, setWeight] = useState('');\n  const [bodyFat, setBodyFat] = useState('');\n  const [leanBodyMass, setLeanBodyMass] = useState('');\n  const [proteinRatio, setProteinRatio] = useState(30);\n  const [carbRatio, setCarbRatio] = useState(50);\n  const [fatRatio, setFatRatio] = useState(20);\n  const [proteinAmount, setProteinAmount] = useState('');\n  const [carbAmount, setCarbAmount] = useState('');\n  const [fatAmount, setFatAmount] = useState('');\n  const [dailyCalories, setDailyCalories] = useState('');\n  const calculateLeanBodyMass = () => {\n    if (weight && bodyFat) {\n      const fatMass = bodyFat / 100 * weight;\n      const leanMass = weight - fatMass;\n      setLeanBodyMass(leanMass.toFixed(2));\n    }\n  };\n  const calculateMacronutrients = () => {\n    if (leanBodyMass && dailyCalories) {\n      const protein = proteinRatio / 100 * leanBodyMass;\n      const carbs = carbRatio / 100 * leanBodyMass;\n      const fat = fatRatio / 100 * leanBodyMass;\n      setProteinAmount((protein * 4).toFixed(2)); // Assuming 1g of protein = 4 calories\n      setCarbAmount((carbs * 4).toFixed(2)); // Assuming 1g of carbs = 4 calories\n      setFatAmount((fat * 9).toFixed(2)); // Assuming 1g of fat = 9 calories\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Bodybuilding Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Daily Caloric Intake Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter your daily calories goal\",\n            value: dailyCalories,\n            onChange: e => setDailyCalories(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: calculateLeanBodyMass,\n        children: \"Calculate Lean Body Mass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), leanBodyMass && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: calculateMacronutrients,\n          children: \"Calculate Macronutrients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), proteinAmount && carbAmount && fatAmount && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Macronutrient Breakdown:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Protein: \", proteinAmount, \" calories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Carbohydrates: \", carbAmount, \" calories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fat: \", fatAmount, \" calories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i6GVm8e+p1BL6AI/26w2nfT/1Zc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","weight","setWeight","useState","bodyFat","setBodyFat","leanBodyMass","setLeanBodyMass","proteinRatio","setProteinRatio","carbRatio","setCarbRatio","fatRatio","setFatRatio","proteinAmount","setProteinAmount","carbAmount","setCarbAmount","fatAmount","setFatAmount","dailyCalories","setDailyCalories","calculateLeanBodyMass","fatMass","leanMass","toFixed","calculateMacronutrients","protein","carbs","fat","_jsxDEV","Container","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Form","Row","Col","Label","Control","type","placeholder","value","onChange","e","target","Button","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/jtsang01/Desktop/GainsSuggestor/gainsuggestor/src/App.js"],"sourcesContent":["// ... (previous imports)\n\nfunction App() {\n  const [weight, setWeight] = useState('');\n  const [bodyFat, setBodyFat] = useState('');\n  const [leanBodyMass, setLeanBodyMass] = useState('');\n  const [proteinRatio, setProteinRatio] = useState(30);\n  const [carbRatio, setCarbRatio] = useState(50);\n  const [fatRatio, setFatRatio] = useState(20);\n  const [proteinAmount, setProteinAmount] = useState('');\n  const [carbAmount, setCarbAmount] = useState('');\n  const [fatAmount, setFatAmount] = useState('');\n  const [dailyCalories, setDailyCalories] = useState('');\n\n  const calculateLeanBodyMass = () => {\n    if (weight && bodyFat) {\n      const fatMass = (bodyFat / 100) * weight;\n      const leanMass = weight - fatMass;\n      setLeanBodyMass(leanMass.toFixed(2));\n    }\n  };\n\n  const calculateMacronutrients = () => {\n    if (leanBodyMass && dailyCalories) {\n      const protein = (proteinRatio / 100) * leanBodyMass;\n      const carbs = (carbRatio / 100) * leanBodyMass;\n      const fat = (fatRatio / 100) * leanBodyMass;\n\n      setProteinAmount((protein * 4).toFixed(2)); // Assuming 1g of protein = 4 calories\n      setCarbAmount((carbs * 4).toFixed(2)); // Assuming 1g of carbs = 4 calories\n      setFatAmount((fat * 9).toFixed(2)); // Assuming 1g of fat = 9 calories\n    }\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <h1 className=\"mb-4\">Bodybuilding Calculator</h1>\n      <Form>\n        {/* ... (previous form fields) */}\n        <Row className=\"mb-3\">\n          <Col>\n            <Form.Label>Daily Caloric Intake Goal</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Enter your daily calories goal\"\n              value={dailyCalories}\n              onChange={(e) => setDailyCalories(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Button variant=\"primary\" onClick={calculateLeanBodyMass}>\n          Calculate Lean Body Mass\n        </Button>\n        {leanBodyMass && (\n          <div className=\"mt-4\">\n            <Button variant=\"success\" onClick={calculateMacronutrients}>\n              Calculate Macronutrients\n            </Button>\n          </div>\n        )}\n      </Form>\n      {proteinAmount && carbAmount && fatAmount && (\n        <div className=\"mt-4\">\n          <h3>Macronutrient Breakdown:</h3>\n          <p>Protein: {proteinAmount} calories</p>\n          <p>Carbohydrates: {carbAmount} calories</p>\n          <p>Fat: {fatAmount} calories</p>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}